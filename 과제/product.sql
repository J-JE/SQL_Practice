CREATE TABLE PRODUCT_STOCK (
  PRODUCT_ID  VARCHAR2(30) PRIMARY KEY,
  P_NAME  VARCHAR2(30)  NOT NULL,
  PRICE NUMBER(10)  NOT NULL,
  DESCRIPTION VARCHAR2(50),
  STOCK NUMBER DEFAULT 0 
);  

--상품정보 insert
INSERT INTO PRODUCT_STOCK VALUES ('nb_ss7', '삼성노트북', 1570000, '시리즈 7', DEFAULT);
INSERT INTO PRODUCT_STOCK VALUES ('nb_ama4', '맥북에어', 1200000, 'xcode 4', DEFAULT);
INSERT INTO PRODUCT_STOCK VALUES ('pc_ibm', 'ibmPC', 750000, 'windows 8', DEFAULT);

CREATE TABLE PRODUCT_IO(
    IO_NUM NUMBER PRIMARY KEY,
    PRODUCT_ID VARCHAR2(30) REFERENCES PRODUCT_STOCK(PRODUCT_ID) ON DELETE CASCADE,
    IO_DATE DATE NOT NULL,
    AMOUNT NUMBER NOT NULL,
    STATUS VARCHAR2(10) CHECK(STATUS IN ('입고','출고'))
);

--PRODUCT_IO 테이블에 데이터 INSERT시 IO_NUM을 위한 SEQUENCE 생성 후 작업할 것
CREATE SEQUENCE SEQ_PRODUCT_IO
 START WITH 1
INCREMENT BY 1
MAXVALUE 100
NOCYCLE
NOCACHE;

--PRODUCT_IO 테이블에 입고 또는 출고에 대한 데이터 삽입 시 각 상태에 따라
--PRODUCT 테이블의 STOCK 컬럼 값 자동으로 수정되도록 트리거 생성 후 작업할 것
CREATE OR REPLACE TRIGGER TRG_PRODUCT_IO
    AFTER INSERT ON PRODUCT_IO
    FOR EACH ROW
BEGIN
    IF :NEW.STATUS='입고' THEN
        UPDATE PRODUCT_STOCK
        SET STOCK = STOCK + :NEW.AMOUNT
        WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
    ELSIF :NEW.STATUS='출고' THEN
        UPDATE PRODUCT_STOCK
        SET STOCK = STOCK - :NEW.AMOUNT
        WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
    END IF;
END;
/


INSERT INTO PRODUCT_IO VALUES(SEQ_PRODUCT_IO.NEXTVAL, 'nb_ss7', '19/07/01', 30, '입고');
INSERT INTO PRODUCT_IO VALUES(SEQ_PRODUCT_IO.NEXTVAL, 'nb_ss7', '19/07/02', 3, '출고');
INSERT INTO PRODUCT_IO VALUES(SEQ_PRODUCT_IO.NEXTVAL, 'pc_ibm', '19/07/02', 10, '입고');

ALTER TABLE PRODUCT_STOCK
ADD CHECK(STOCK >= 0);
--------------------------------------------------------------------------------
DROP SEQUENCE SEQ_PRODUCT_IO;
SELECT * FROM USER_SEQUENCES;
DELETE FROM PRODUCT_IO;

UPDATE PRODUCT_STOCK SET STOCK = 10 WHERE PRODUCT_ID = 'nb_ss7';
UPDATE PRODUCT_STOCK SET P_NAME = '맥북에어', PRICE = 1200000, DESCRIPTION = 'xcode4' WHERE PRODUCT_ID = 'nb_ama4';
COMMIT;